Program ::= Func*;

abstract Func;
FuncDecl : Func ::= IdDecl Param* Block;
Param ::= IdUseExpr;
Block ::= Stmt*;

abstract Stmt;
WhileStmt : Stmt ::= CondExpr Block;
IfStmt	  : Stmt ::= CondExpr Then:Block [Else:Block];
ReturnStmt: Stmt ::= Expr;
AssignStmt: Stmt ::= IdUseExpr Expr;
DeclStmt  : Stmt ::= IdDecl;
PrintStmt : Stmt ::= Expr;

abstract Expr;
abstract NumExpr : Expr;
abstract BinExpr : Expr ::= Left:Expr Right:Expr;
abstract CondExpr: BinExpr;

IdUseExpr 	: NumExpr ::= <ID>;
IntUseExpr	: NumExpr ::= <NUMERAL>;
FuncUseExpr : NumExpr ::= IdUseExpr Expr*;
ReadFunc    : Expr;

Add : BinExpr;
Sub : BinExpr;
Mul : BinExpr;
Div : BinExpr;
Mod : BinExpr;
GT  : CondExpr;
LT  : CondExpr;
GE  : CondExpr;
LE  : CondExpr;
EQ  : CondExpr;
NE  : CondExpr;

IdDecl	::= <ID>;